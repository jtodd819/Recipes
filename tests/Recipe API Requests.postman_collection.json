{
	"info": {
		"name": "Recipe API Requests",
		"_postman_id": "6fc38b47-00e6-a62d-5c8d-3f26740f3751",
		"description": "Rest API Tests for Final Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Recipe Creation and Viewing",
			"description": "",
			"item": [
				{
					"name": "Create a new recipe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "338c3c3b-62cd-4b80-a227-b18837e03855",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('r1_name', 'r1');",
									"pm.globals.set('r1_directions', 'dir');",
									"pm.globals.set('r1_prep_time', '1 minute');",
									"pm.globals.set('r1_description', 'desc');",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fb48d64e-d2bb-48d6-9505-2b52c017461e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the creation of a recipe with p_id in url returns a JSON string recipe with all the fields sent in body.\", function () {",
									"    var r1 = pm.response.json();",
									"    pm.globals.set('r1_json', r1);",
									"    pm.expect(r1.name).to.eql(pm.globals.get('r1_name'));",
									"    pm.expect(r1.directions).to.eql(pm.globals.get('r1_directions'));",
									"    pm.expect(r1.prep_time).to.eql(pm.globals.get('r1_prep_time'));",
									"    pm.expect(r1.description).to.eql(pm.globals.get('r1_description'));",
									"    pm.expect(r1.person_id).to.eql(pm.environment.get('test_p_id'));",
									"    pm.globals.set('r1_id', r1.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r1\", \"directions\": \"dir\", \"prep_time\": \"1 minute\", \"description\": \"desc\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Create a second new recipe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4b2ee339-3cf0-47c4-b155-04fa1a3cb59b",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('r2_name', 'r2');",
									"pm.globals.set('r2_directions', 'dir2');",
									"pm.globals.set('r2_prep_time', '2 minutes');",
									"pm.globals.set('r2_description', 'desc2');",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e57a28bd-abcd-47ed-8968-7172307159b9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the creation of a recipe with p_id in body returns a JSON string recipe with all the fields sent in body.\", function() {",
									"    var r2 = pm.response.json();",
									"    pm.globals.set('r2_json', r2);",
									"    pm.expect(r2.name).to.eql(pm.globals.get('r2_name'));",
									"    pm.expect(r2.directions).to.eql(pm.globals.get('r2_directions'));",
									"    pm.expect(r2.prep_time).to.eql(pm.globals.get('r2_prep_time'));",
									"    pm.expect(r2.description).to.eql(pm.globals.get('r2_description'));",
									"    pm.expect(r2.person_id).to.eql(pm.environment.get('test_p_id'));",
									"    pm.globals.set('r2_id', r2.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r2\", \"person_id\": {{test_p_id}}, \"directions\": \"dir2\", \"prep_time\": \"2 minutes\", \"description\": \"desc2\"}"
						},
						"url": {
							"raw": "{{site}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"recipes"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Get all of a user's recipes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d08aeb5-c04e-40b9-82e7-d554c000f252",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting all the recipes for the test user returns the 2 created recipes.\", function () {",
									"    var recipes = pm.response.json();",
									"    pm.expect(recipes.length).to.eql(2);",
									"    pm.expect(recipes[0].name).to.eql(pm.globals.get('r1_json').name);",
									"    pm.expect(recipes[1].name).to.eql(pm.globals.get('r2_json').name);",
									"    pm.expect(recipes[0].description).to.eql(pm.globals.get('r1_json').description);",
									"    pm.expect(recipes[1].description).to.eql(pm.globals.get('r2_json').description);",
									"    pm.expect(recipes[0].directions).to.eql(pm.globals.get('r1_json').directions);",
									"    pm.expect(recipes[1].directions).to.eql(pm.globals.get('r2_json').directions);",
									"    pm.expect(recipes[0].prep_time).to.eql(pm.globals.get('r1_json').prep_time);",
									"    pm.expect(recipes[1].prep_time).to.eql(pm.globals.get('r2_json').prep_time);",
									"    pm.expect(recipes[0].person_id).to.eql(pm.globals.get('r1_json').person_id);",
									"    pm.expect(recipes[1].person_id).to.eql(pm.globals.get('r2_json').person_id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the first created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5616a9cb-3430-4639-ab9f-173883ee6d99",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the first created recipe successfully returns it.\", function () {",
									"    var r = pm.response.json();",
									"    pm.expect(r).to.eql(pm.globals.get('r1_json'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Ingredient Creation and Viewing",
			"description": "",
			"item": [
				{
					"name": "Create a new ingredient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "acec6455-bc89-47fa-a40d-40bf4ab93ef1",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('i1_name', 'i1');",
									"pm.globals.set('i1_quantity', 1);",
									"pm.globals.set('i1_recipe_id', pm.globals.get('r1_id'));",
									"pm.globals.set('i1_unit', 'u');",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3278bd26-76a1-45d0-8582-f818112ea733",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the creation of an ingredient with p_id in url returns a JSON string ingredient with all the fields sent in body.\", function () {",
									"    var i1 = pm.response.json();",
									"    pm.globals.set('i1_json', i1);",
									"    pm.expect(i1.name).to.eql(pm.globals.get('i1_name'));",
									"    pm.expect(i1.quantity).to.eql(pm.globals.get('i1_quantity'));",
									"    pm.expect(i1.recipe_id).to.eql(pm.globals.get('i1_recipe_id'));",
									"    pm.expect(i1.person_id).to.eql(pm.environment.get('test_p_id'));",
									"    pm.globals.set('i1_id', i1.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"i1\", \"quantity\": 1, \"recipe_id\": {{r1_id}}, \"unit\": \"u\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Get the first created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "235f9178-3c39-4482-b339-40e77d9107f4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the first created recipe has the 1st ingredient's id in it's ingredient id's\" +",
									"\"after the ingredient is created with it's recipe id\", function () {",
									"    var r = pm.response.json();",
									"    pm.expect(r.ingredient_ids[r.ingredient_ids.length - 1]).to.eql(pm.globals.get('i1_id'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a second new ingredient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3c94ae2f-9e95-4f72-81f0-945580862121",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('i2_name', 'i2');",
									"pm.globals.set('i2_quantity', 2);",
									"pm.globals.set('i2_recipe_id', pm.globals.get('r2_id'));",
									"pm.globals.set('i2_unit', 'u2');",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ce2742e6-0221-4557-95cc-9d113b15c13a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the creation of an ingredient with p_id in body returns a JSON string ingredient with all the fields sent in body.\", function () {",
									"    var i2 = pm.response.json();",
									"    pm.globals.set('i2_json', i2);",
									"    pm.expect(i2.name).to.eql(pm.globals.get('i2_name'));",
									"    pm.expect(i2.quantity).to.eql(pm.globals.get('i2_quantity'));",
									"    pm.expect(i2.recipe_id).to.eql(pm.globals.get('i2_recipe_id'));",
									"    pm.expect(i2.person_id).to.eql(pm.environment.get('test_p_id'));",
									"    pm.globals.set('i2_id', i2.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"i2\", \"quantity\": 2, \"person_id\": {{test_p_id}}, \"recipe_id\": {{r2_id}}, \"unit\": \"u2\"}"
						},
						"url": {
							"raw": "{{site}}/ingredients",
							"host": [
								"{{site}}"
							],
							"path": [
								"ingredients"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Get the second created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "512778c2-cb8e-44b9-8dde-9aa9fe638b19",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the second created recipe has the 2nd ingredient's id in it's ingredient id's\" +",
									"\"after the ingredient is created with it's recipe id\", function () {",
									"    var r = pm.response.json();",
									"    pm.expect(r.ingredient_ids[r.ingredient_ids.length - 1]).to.eql(pm.globals.get('i2_id'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get all of a user's ingredients",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "22e6d58a-aaad-405d-85cf-12c712d6986d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting all the recipes for the test user returns the 2 created recipes.\", function () {",
									"    var ings = pm.response.json();",
									"    pm.expect(ings.length).to.eql(2);",
									"    pm.expect(ings[0].name).to.eql(pm.globals.get('i1_json').name);",
									"    pm.expect(ings[1].name).to.eql(pm.globals.get('i2_json').name);",
									"    pm.expect(ings[0].quantity).to.eql(pm.globals.get('i1_json').quantity);",
									"    pm.expect(ings[1].quantity).to.eql(pm.globals.get('i2_json').quantity);",
									"    pm.expect(ings[0].recipe_id).to.eql(pm.globals.get('i1_json').recipe_id);",
									"    pm.expect(ings[1].recipe_id).to.eql(pm.globals.get('i2_json').recipe_id);",
									"    pm.expect(ings[0].unit).to.eql(pm.globals.get('i1_json').unit);",
									"    pm.expect(ings[1].unit).to.eql(pm.globals.get('i2_json').unit);",
									"    pm.expect(ings[0].person_id).to.eql(pm.globals.get('i1_json').person_id);",
									"    pm.expect(ings[1].person_id).to.eql(pm.globals.get('i2_json').person_id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the first created ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c923de5e-c5fb-4550-867a-5121ed676c38",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the first created ingredient successfully returns it.\", function () {",
									"    var i = pm.response.json();",
									"    pm.expect(i).to.eql(pm.globals.get('i1_json'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients/{{i1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients",
								"{{i1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipe Editing and Deletion",
			"description": "",
			"item": [
				{
					"name": "Patch the first created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b932b0e1-f126-44b0-8442-f894d4054f8d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the patching of recipe 1 returns a JSON recipe with all new fields set.\", function () {",
									"    var r1 = pm.response.json();",
									"    pm.globals.set('r1_new_json', r1);",
									"    pm.expect(r1.name).to.eql(pm.globals.get('r1_new_name'));",
									"    pm.expect(r1.directions).to.eql(pm.globals.get('r1_new_directions'));",
									"    pm.expect(r1.prep_time).to.eql(pm.globals.get('r1_new_prep_time'));",
									"    pm.expect(r1.description).to.eql(pm.globals.get('r1_new_description'));",
									"    pm.expect(r1.person_id).to.eql(pm.environment.get('test_p_id'));",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8618dce0-72ab-4975-b3ed-fb58841fcb79",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('r1_new_name', 'r1_new');",
									"pm.globals.set('r1_new_directions', 'dir_new');",
									"pm.globals.set('r1_new_prep_time', '1 minute_new');",
									"pm.globals.set('r1_new_description', 'desc_new');",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r1_new\", \"directions\": \"dir_new\", \"prep_time\": \"1 minute_new\", \"description\": \"desc_new\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the first created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c211ad0-1dad-4909-bfe5-9b832eb6bd8b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the first created recipe successfully returns the patched version of it.\", function () {",
									"    var r = pm.response.json();",
									"    pm.expect(r).to.eql(pm.globals.get('r1_new_json'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete the first created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a842a3a3-ea37-4388-99aa-94a0c96a359f",
								"type": "text/javascript",
								"exec": [
									"console.log('Deleting the first created recipe.')"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the first created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8dfff00-2db3-4fa5-a14b-d6ea1451d3aa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the first created recipe returns a 404 after it was deleted.\", function () {",
									"   pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the first created ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06552364-337e-4e8d-bc7c-d26335881d1d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the first created ingredient returns a 404 error after it is deleted when it's recipe was deleted.\", function (){",
									"    pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients/{{i1_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients",
								"{{i1_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Ingredient Editing and Deletion",
			"description": "",
			"item": [
				{
					"name": "Create a 3rd new recipe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "29a9de14-df15-4b5d-8222-405d7017aa63",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f2bf5e34-4e49-412d-bad7-cb00211de8b0",
								"type": "text/javascript",
								"exec": [
									"console.log('Creating a 3rd recipe');",
									"var r3 = pm.response.json();",
									"pm.globals.set('r3_json', r3);",
									"pm.globals.set('r3_id', r3.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r3\", \"directions\": \"dir3\", \"prep_time\": \"3 minutes\", \"description\": \"desc3\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Patch the 2nd created ingredient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2682c2bf-04cb-4fb1-a6c4-84d008da30c5",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('i2_new_name', 'i2_new');",
									"pm.globals.set('i2_new_quantity', 3);",
									"pm.globals.set('i2_new_recipe_id', pm.globals.get('r3_id'));",
									"pm.globals.set('i2_new_unit', 'u_new');"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1e047de4-b653-4c94-bc71-1f17398a08ad",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing patching ingredient 2 returns a JSON string ingredient with all the fields sent in body.\", function () {",
									"    var i2 = pm.response.json();",
									"    pm.globals.set('i2_new_json', i2);",
									"    pm.expect(i2.name).to.eql(pm.globals.get('i2_new_name'));",
									"    pm.expect(i2.quantity).to.eql(pm.globals.get('i2_new_quantity'));",
									"    pm.expect(i2.recipe_id).to.eql(pm.globals.get('i2_new_recipe_id'));",
									"    pm.expect(i2.person_id).to.eql(pm.environment.get('test_p_id'));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"i2_new\", \"quantity\": 3, \"recipe_id\": {{r3_id}}, \"unit\": \"u_new\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients/{{i2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients",
								"{{i2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the 2nd created ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "048ca0f2-d853-4d6f-a5c2-413c8af62d95",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the 2nd created recipe returns it's patched version after patching.\", function () {",
									"    var i = pm.response.json();",
									"    pm.expect(i).to.eql(pm.globals.get('i2_new_json'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients/{{i2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients",
								"{{i2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the 3rd created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fad04a86-e7da-439a-8c7f-2136f662399e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the 3rd created recipe has the 2nd ingredient's id in it's ingredient id's\" +",
									"\"after the ingredient is patched with it's recipe id\", function () {",
									"    var r = pm.response.json();",
									"    pm.expect(r.ingredient_ids[r.ingredient_ids.length - 1]).to.eql(pm.globals.get('i2_id'));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r3_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r3_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the 2nd created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbed9fbb-d473-461e-8cf9-d0e01f72256b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the 2nd created recipe no longer has any ingredients after the second ingredient patched out it's recipe id\", function () {",
									"    pm.expect(pm.response.json().ingredient_ids.length).to.eql(0);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete the 2nd created ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa56867c-4fab-4275-bd42-1e7a7cfd81ea",
								"type": "text/javascript",
								"exec": [
									"console.log('Deleting the 2nd created ingredient.')"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients/{{i2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients",
								"{{i2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the 2nd created ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7d05fdc-1883-473c-84cd-bbfc5088cc85",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting the 2nd created recipe returns a 404 after it is deleted.\", function () {",
									"     pm.response.to.have.status(404);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/ingredients/{{i2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"ingredients",
								"{{i2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the 3rd created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9163e601-7404-4d3f-8468-b7ca25a18a71",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the 3rd created recipe has no ingredient ids after its only ingredient, 2, was deleted.\", function () {",
									"    pm.expect(pm.response.json().ingredient_ids.length).to.eql(0);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r3_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r3_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete the 2nd created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3454cfc-d3d3-452a-8a3d-c5ffbe6bfdb8",
								"type": "text/javascript",
								"exec": [
									"console.log('Deleting the 2nd created recipe.')"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r2_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r2_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete the 3rd created recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d3507f6-a1be-4274-a9cb-875701379a82",
								"type": "text/javascript",
								"exec": [
									"console.log('Deleting the 3rd created recipe.')"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id}}/recipes/{{r3_id}}",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id}}",
								"recipes",
								"{{r3_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"description": "",
			"item": [
				{
					"name": "Create a new recipe - unauthorized",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2b3552a6-683b-4caf-8340-376439c2b4aa",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5b3a647-764a-484e-bcd3-2ac12b88635a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing the creation of a recipe for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r1\", \"directions\": \"dir\", \"prep_time\": \"1 minute\", \"description\": \"desc\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"recipes"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Create a second new recipe - unauthorized",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4b2ee339-3cf0-47c4-b155-04fa1a3cb59b",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('r2_name', 'r2');",
									"pm.globals.set('r2_directions', 'dir2');",
									"pm.globals.set('r2_prep_time', '2 minutes');",
									"pm.globals.set('r2_description', 'desc2');",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39956d7d-f1f5-4d09-89e8-61fd30b50b3c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing creating a recipe for an unauthorized user with p_id sent in body returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r2\", \"person_id\": {{test_p_id_2}}, \"directions\": \"dir2\", \"prep_time\": \"2 minutes\", \"description\": \"desc2\"}"
						},
						"url": {
							"raw": "{{site}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"recipes"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Get all of a user's recipes - unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a6cd5a6-b831-40f9-8365-416328f507eb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting all the recipes for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/recipes",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"recipes"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get a recipe - unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72741e09-d475-4865-8a4f-06628a6406c8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting a recipe for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/recipes/1",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"recipes",
								"1"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a new ingredient - unauthorized",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "acec6455-bc89-47fa-a40d-40bf4ab93ef1",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('i1_name', 'i1');",
									"pm.globals.set('i1_quantity', 1);",
									"pm.globals.set('i1_recipe_id', pm.globals.get('r1_id'));",
									"pm.globals.set('i1_unit', 'u');",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "383c6839-cb4f-4e63-9720-8897d2d467a1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing creating a new ingredient for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"i1\", \"quantity\": 1, \"recipe_id\": {{r1_id}}, \"unit\": \"u\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/ingredients",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"ingredients"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Create a second new ingredient - unauthorized",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3c94ae2f-9e95-4f72-81f0-945580862121",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set('i2_name', 'i2');",
									"pm.globals.set('i2_quantity', 2);",
									"pm.globals.set('i2_recipe_id', pm.globals.get('r2_id'));",
									"pm.globals.set('i2_unit', 'u2');",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b98c5d3-3685-497e-8ce8-f72984435a7e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing creating an ingredient for an unauthorized user with p_id sent in body returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"i2\", \"quantity\": 2, \"person_id\": {{test_p_id}}, \"recipe_id\": {{r2_id}}, \"unit\": \"u2\"}"
						},
						"url": {
							"raw": "{{site}}/ingredients",
							"host": [
								"{{site}}"
							],
							"path": [
								"ingredients"
							]
						},
						"description": "Test POSTing a new recipe is successful and returns a JSON string with all of the fields sent in body."
					},
					"response": []
				},
				{
					"name": "Get all of a user's ingredients - unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c000e9-e103-4d63-8c44-3e93e76062dc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting all the ingredients for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/ingredients",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"ingredients"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get an ingredient - unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cf11556-60ca-4898-8596-0162bdb65410",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing getting a recipe for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/ingredients/1",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"ingredients",
								"1"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Patch a recipe - unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21f9e518-04b5-4212-b490-1622112c1fc6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing patching a recipe for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ab783002-3edd-42bd-a060-f13524d07241",
								"type": "text/javascript",
								"exec": [
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"r1_new\", \"directions\": \"dir_new\", \"prep_time\": \"1 minute_new\", \"description\": \"desc_new\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/recipes/1",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"recipes",
								"1"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Patch an ingredient - unauthorized",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "93c31d92-966f-41ef-b9c1-66e5081795c3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3dce69b7-ea7a-4bdd-b0a9-0b8460c1d4e9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing patching an ingredient for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"i2_new\", \"quantity\": 3, \"recipe_id\": {{r3_id}}, \"unit\": \"u_new\"}"
						},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/ingredients/1",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"ingredients",
								"1"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a recipe - unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32f441e3-4903-4ab9-bf1f-559385ee4d89",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing deleting a recipe for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/recipes/1",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"recipes",
								"1"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete an ingredient - unathorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20f10cb3-0b57-48b5-9ee0-e79618567aa3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Testing deleting an ingredient for an unauthorized user returns a 403 error.\", function () {",
									"   pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{site}}/{{test_p_id_2}}/ingredients/1",
							"host": [
								"{{site}}"
							],
							"path": [
								"{{test_p_id_2}}",
								"ingredients",
								"1"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}